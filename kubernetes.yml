apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    workload.user.cattle.io/workloadselector: deployment-palteform-dev-frontend-framework
  name: frontend-framework
spec:
  replicas: 1
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-palteform-dev-frontend-framework
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-palteform-dev-frontend-framework
    spec:
      containers:
      - image: customimage
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 80
            scheme: HTTP
        name: frontend-framework
        ports:
        - containerPort: 80
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 80
            scheme: HTTP
      imagePullSecrets:
      - name: rcn
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    field.cattle.io/targetWorkloadIds: '["deployment:palteform-dev:frontend-framework"]'
    workload.cattle.io/targetWorkloadIdNoop: "true"
    workload.cattle.io/workloadPortBased: "true"
  name: frontend-framework
spec:
  clusterIP: None
  ports:
  - name: default
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    workload.user.cattle.io/workloadselector: deployment-palteform-dev-frontend-framework
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
